#!/bin/bash
#    Copyright (C) 2014 SferaDev

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>

clear
echo "Welcome $USER"
echo
echo "What can I do for you?"
echo "Option 1: Build with CWM"
echo "Option 2: Build with TWRP"
echo "Option 3: Build with Experimental features (Only CWM)"
echo "Option 4: Create a changelog"
echo

out=../out/target/product/galaxysmtd/
DATE=$(date +"%Y%m%d")

read -p "Your option: " OPTION

## Cleaning Environment
echo "Cleaning up stuff"
cd ..
rm -rf .repo/local_manifests/roomservice.xml
echo "Cleaning old builds"
make clobber
repo sync -j32

## Per case option
case $OPTION in
"1")
echo "Setting CWM..."
ziptag=CWM
rm -rf device/samsung/galaxysmtd/pa.dependencies
cp Arrow/dependencies/cwm.dependencies device/samsung/galaxysmtd/pa.dependencies
echo "Lunching device"
source build/envsetup.sh
lunch pa_galaxysmtd-userdebug
repo sync -j32
;;
"2")
echo "Setting TWRP..."
ziptag=TWRP
rm -rf device/samsung/galaxysmtd/pa.dependencies
cp Arrow/dependencies/twrp.dependencies device/samsung/galaxysmtd/pa.dependencies
echo "Lunching device"
source build/envsetup.sh
lunch pa_galaxysmtd-userdebug
repo sync -j32
cd device/samsung/aries-common
git revert 60d649198cca8b1040136a7ca091a1c386404b01 --no-edit
cd ../../..
;;
"3")
echo "Setting CWM..."
ziptag=CMA
rm -rf device/samsung/galaxysmtd/pa.dependencies
cp Arrow/dependencies/cwm.dependencies device/samsung/galaxysmtd/pa.dependencies
echo "Lunching device"
source build/envsetup.sh
lunch pa_galaxysmtd-userdebug
repo sync -j32
cd kernel/samsung/aries
git fetch github
git merge github/cma
cd ../../..
;;
esac

## Compile kernel
echo "Building image"
mka bootimage

## Check if signapk is built
if [ ! -e $androidtop/out/host/linux-x86/framework/signapk.jar ]
then
  echo "Signapk.jar not found, rebuilding..."
  mka signapk
fi

## GoTo Arrow Folder and do random stuff
cd Arrow

## Clean old zip
rm -rf kernel_zip
mkdir -p kernel_zip/system/app
mkdir -p kernel_zip/system/etc/init.d
mkdir -p kernel_zip/system/lib/modules
mkdir -p kernel_zip/META-INF/com/google/android

## Add files
echo "Copying boot.img ..."
cp `echo $out`/boot.img kernel_zip/
echo "Copying kernel modules ..."
cp -R `echo $out`/system/lib/modules/* kernel_zip/system/lib/modules
echo "Copying update-binary ..."
cp tools/update-binary kernel_zip/META-INF/com/google/android/update-binary
echo "Copying apps & lights.aries.so ..."
cp -R tools/flash/* kernel_zip/
echo "Copying stock updater-script ..."
cat tools/kernel_updater-script > kernel_zip/META-INF/com/google/android/updater-script

echo "Zipping package..."
cd kernel_zip
zip -qr ../../arrow-galaxysmtd-$DATE.zip ./
cd ../../

echo "Signing package..."
java -jar out/host/linux-x86/framework/signapk.jar build/target/product/security/testkey.x509.pem build/target/product/security/testkey.pk8 arrow-galaxysmtd-$DATE.zip arrow-galaxysmtd-$DATE-signed.zip
rm arrow-galaxysmtd-$DATE.zip

## Create md5
md5sum arrow-galaxysmtd-$DATE-$ziptag.zip > arrow-galaxysmtd-$DATE-$ziptag.zip.md5

## The End
echo "Finished build"

## Upload
scp arrow-galaxysmtd-$DATE-$ziptag.* sferadev@host.sferadev.com:~/public_html/Arrow/

exit 0
